name: deploy-backend

on:
  workflow_run:
    workflows: [ci-pipeline]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Try to download backend artifact
        id: download
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: ./publish/backend

      - name: Check if backend artifact exists
        id: check
        run: echo "found=$([[ -d ./publish/backend ]] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Stop if no backend artifact
        if: steps.check.outputs.found == 'false'
        run: echo "No backend artifact, skipping deploy."

      - name: Copy to server
        if: steps.check.outputs.found == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./publish/backend"
          target: "/app/backend"

      - name: Restart Backend service
        if: steps.check.outputs.found == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export DEFAULT_CONNECTION_STRING='${{ secrets.DEFAULT_CONNECTION_STRING }}'
            cd /app/backend
            docker compose -f docker-compose.backend.yml down
            docker compose -f docker-compose.backend.yml up -d --build

