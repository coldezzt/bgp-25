name: cd-pipeline

on:
  workflow_run:
    workflows: [ci-pipeline]
    types:
      - completed

jobs: 
  deploy-bot:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Bot artifact
        uses: actions/download-artifact@v4
        with:
          name: bot
          path: ./bot
      
      - name: Copy to Bot Server
        uses: applebot/scp-action@master
        with:
          host: ${{ secrets.BOT_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./bot"
          target: "/app/bot"
        
      - name: Restart Bot
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BOT_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export TELEGRAM_TOKEN='${{ secrets.TELEGRAM_TOKEN }}'
            cd /app/bot
            docker compose -f docker-compose.bot.yml down
            docker compose -f docker-compose.bot.yml up -d -build
    
  deploy-backend:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: ./backend
      
      - name: Copy to Backend Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./backend"
          target: "/app/backend"
      
      - name: Restart Backend
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export DEFAULT_CONNECTION_STRING='${{ secrets.DEFAULT_CONNECTION_STRING }}'
            cd /app/backend
            docker compose -f docker-compose.backend.yml down
            docker compose -f docker-compose.backend.yml up -d --build
