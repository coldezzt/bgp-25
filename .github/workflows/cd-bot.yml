name: deploy-bot

on:
  workflow_run:
    workflows: [ci-pipeline]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Try to download bot artifact
        id: download
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: bot
          path: ./publish/bot

      - name: Check if bot artifact exists
        id: check
        run: echo "found=$([[ -d ./publish/bot ]] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Stop if no bot artifact
        if: steps.check.outputs.found == 'false'
        run: echo "No bot artifact, skipping deploy."

      - name: Copy to server
        if: steps.check.outputs.found == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.BOT_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./publish/bot"
          target: "/app/bot"

      - name: Restart Bot service
        if: steps.check.outputs.found == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BOT_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            export TELEGRAM_TOKEN='${{ secrets.TELEGRAM_TOKEN }}'
            cd /app/bot
            docker compose -f docker-compose.bot.yml down
            docker compose -f docker-compose.bot.yml up -d --build

